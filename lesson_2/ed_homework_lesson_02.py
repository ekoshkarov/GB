print('###' * 47)
print('###' * 20, 'УРОК №2  ЗАДАНИЕ №1', '###' * 20 )
print('###' * 47)

print(' ')
print('****************', 'Анализ типов различных данных', '****************')
print(' ')


# # Создать список и заполнить его элементами различных типов данных.
# # Реализовать скрипт проверки типа данных каждого элемента.
# # Использовать функцию type() для проверки типа.
# # Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

type_list = [9, 5/9, True, 0.85, 'text', 'Привет! ']

print(type_list)
print(' ')
for i in range (len(type_list)) :
    print(f"Тип переменной в списке: {type(type_list[i])}")



print('###' * 47)
print('###' * 20, 'УРОК №2  ЗАДАНИЕ №2', '###' * 20 )
print('###' * 47)

print(' ')
print('****************', 'Работа с элементами списка', '****************')
print(' ')

# Для списка реализовать обмен значений соседних элементов.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input().
#
el_count = int(input("Введите количество элементов списка "))
my_list = []
i = 0
el = 0
while i < el_count:
    my_list.append(input("Введите следующее значение списка "))
    i += 1
print(' ')
print('Список введённых значений:                      ' ,my_list)

for elem in range(int(len(my_list)/2)):
        my_list[el], my_list[el + 1] = my_list [el + 1], my_list[el]
        el += 2

print('Список полученных, после перестановок значений: ', my_list)

print(' ')
print('###' * 47)
print('###' * 20, 'УРОК №2  ЗАДАНИЕ №3', '###' * 20 )
print('###' * 47)

print(' ')
print('****************', 'Работа с элементами списка', '****************')
print(' ')

# Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить, к какому времени года относится месяц (зима, весна, лето, осень). Напишите решения через list и dict.


month_list = [['Зима', 12, 1, 2], ['Весна', 3, 4, 5], ['Лето', 6, 7, 8], ['Осень', 9, 10, 11]]

month_num = int(input('Введите порядковый номер месяца в году (1 - 12): '))
if month_num in range(1, 13):
    for i, el in enumerate(month_list):
        if month_num in el[1:4]:
            print(f'Введенный номер месяца относится к сезону:  {el[0]}')
            break
else:
    print('Введен некорректный номер месяца!')

# Вариант решения задания с использованием словаря

month = int(input("Введите порядковый номер месяца в году (1 - 12): "))
seasons = {1: "Зима", 2: "Весна", 3: "Лето", 4: "Осень"}
months_dict = {1: seasons.get(1), 2: seasons.get(1), 3: seasons.get(2), 4: seasons.get(2), 5: seasons.get(2),
               6: seasons.get(3), 7: seasons.get(3), 8: seasons.get(3), 9: seasons.get(4), 10: seasons.get(4),
              11: seasons.get(4), 12: seasons.get(1)}
value = months_dict[month] if month in months_dict else print(f"Your month id {month} is not found in seasons")
print(f"\tВведенный номер месяца относится к сезону: id# {month} is:  '{value}'")

print(' ')
print('###' * 47)
print('###' * 20, 'УРОК №2  ЗАДАНИЕ №4', '###' * 20 )
print('###' * 47)

print(' ')
print('****************', 'Разделение текста', '****************')
print(' ')

text = input("Введите пожалуйста слова, разделенные пробелами : ")
T = text.split()
for x, y in enumerate (T, start=1) :
    if len(y) > 11 :
        y = y[:10]
        print(x, y)
    else :
        print (x,y)

print(' ')
print('###' * 47)
print('###' * 20, 'УРОК №2  ЗАДАНИЕ №5', '###' * 20 )
print('###' * 47)

print(' ')
print('****************', 'Структура рейтинг', '****************')
print(' ')

# Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после н

rating = [10, 10, 5, 4, 1]
print(f"Текущий рейтинг: {rating}")

new_scores_count = int(input("Сколько вы хотите ввести новых элементов рейтинга: "))

for i in range(1, new_scores_count + 1):
    new_score = int(input("Введите новый элемент рейтинга: "))
    if new_score > 0:
        rating.append(new_score)
        rating.sort(reverse = True)
        print(f"Новый рейтинг: {rating}")
    else:
        print("Ошибка. Вы ввели не натуральное число")
print('   ' * 40)
print('###' * 40)
print('ДОМАШНЯЯ РАБОТА ЗАВЕРШЕНА. СПАСИБО ЗА ВНИМАНИЕ !!!')                                                  # уффф + 1